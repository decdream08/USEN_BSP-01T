/**********************************************************************
* @file		PCM9211.h
* @brief	DIR
* @version	1.0
* @date		
* @author	SC Park
*
* Copyright(C) , ESTec
* All rights reserved.
*
**********************************************************************/

#ifndef PCM9211_H
#define PCM9211_H

#include "i2c.h"

#define PCM9211_DEVICE_ADDR						(0x40)

#define PCM9211_RESET_CTL_REG						(0x40)
#define PCM9211_OUTPORT_PORT_CTL_REG			(0x6B)

#define PCM9211_RESET_CTL_REG_ON_VAL				(0x33)
#define PCM9211_RESET_CTL_REG_OFF_VAL			(0xC2)	/* C0 -> C2 */

#define PCM9211_OUTPORT_PORT_CTL_REG_AUTO		(0x00)
#define PCM9211_OUTPORT_PORT_CTL_REG_DIR		(0x11)
#define PCM9211_OUTPORT_PORT_CTL_REG_ADC		(0x22)

#define PCM9211_OUTPORT_PORT_CTL_REG_AUXIN0		(0x33)
#define PCM9211_OUTPORT_PORT_CTL_REG_AUXIN1			(0x44)    /* Nou Used Path */
#define PCM9211_OUTPORT_PORT_CTL_REG_AUXIN2	(0x55)

#define PCM9211_ADC_L_CH_CTL_REG						(0x46)
#define PCM9211_ADC_R_CH_CTL_REG						(0x47)

//#define PCM9211_ADC_CH_CTL_REG_GAIN						(0xDB)  /* +2db */
#define PCM9211_ADC_CH_CTL_REG_GAIN						(0xD5)  /* -1db */

#define PCM9211_ADC_CH_CTL_REG_GAIN_9DB					(0xE8)  /* +8.5db */
#define PCM9211_ADC_CH_CTL_REG_GAIN_6D5DB				(0xE4)  /* +6.5db */

#define PCM9211_DIR_RECOVERED_CLOCK					(0x30)
#define PCM9211_DIR_RECOVERED_CLOCK_AUTO				(0x12)

#define PCM9211_XTI_SOURCE_CLOCK					(0x31)
#define PCM9211_XTI_SOURCE_CLOCK_24D576				(0x0A)
#define PCM9211_XTI_SOURCE_CLOCK_24D576_96K			(0x05)
#define PCM9211_XTI_SOURCE_CLOCK_12D288_48K			(0x1A)


#define PCM9211_DIR_INITIAL_REG3					(0x23)
#define PCM9211_DIR_INITIAL_REG3_NON_PCM				(0x0B)

#define PCM9211_DIR_ERROR_CAUSE_SET				(0x25)
#define PCM9211_DIR_ERROR_CAUSE_SET_SF_CHG			(0x31)

#define PCM9211_DIR_ACCEPT_FS_SET					(0x27)
#define PCM9211_DIR_ACCEPT_FS_SET_NOMINAL			(0x11)

#define PCM9211_AUTO_SRC_SELECT					(0x26)
#define PCM9211_AUTO_SRC_SELECT_ERR_LOCK				(0x55)

#define PCM9211_NON_PCM_DEF_REG					(0x28)
#define PCM9211_NON_PCM_DEF_REG_DTS					(0x07)

#define PCM9211_INT0_OUTPUT_CAUSE_MASK			(0x2A)
#define PCM9211_INT0_OUTPUT_CAUSE_MASK_UNLOCK		(0x7F)

#define PCM9211_INT1_OUTPUT_CAUSE_MASK			(0x2B)
#define PCM9211_INT1_OUTPUT_CAUSE_MASK_ADC_DETECT		(0x88)

#define PCM9211_INT0_INT1_OUTPUT_POLARITY			(0x2E)
#define PCM9211_INT0_INT1_OUTPUT_POLARITY_ADC_DETECT_THRESHOLD		(0x18)

#define PCM9211_GPIO_MPIOA_MPIOB					(0x79)
#define PCM9211_GPIO_MPIOA_MPIOB_OUTPUT_MPIOA		(0x0F)

#define PCM9211_GPIO_MPIOC							(0x7A)
#define PCM9211_GPIO_MPIOC_OUTPUT_MPIOC				(0x0F)

#define PCM9211_INT0_OUTPUT_REG					(0x2C)
#define PCM9211_INT0_OUTPUT_REG_LOCK_MASK			(0x80)

#define PCM9211_INT1_OUTPUT_REG					(0x2D)
#define PCM9211_INT1_OUTPUT_REG_ADC_DETECT_MASK	(0x01)
#define PCM9211_INT1_OUTPUT_REG_NON_PCM_MASK			(0x40) 

#define PCM9211_PORT_SAMPLE_FREQ_MEASURE		(0x37)
#define PCM9211_PORT_SAMPLE_FREQ_MEASURE_MASK		(0x07)
#define PCM9211_PORT_SAMPLE_FREQ_MEASURE_DIR		(0x00)
#define PCM9211_PORT_SAMPLE_FREQ_MEASURE_AUXIN2	(0x04)

#define PCM9211_OUTPUT_SAMPLE_FREQUENCY_REG		(0x38)
#define PCM9211_OUTPUT_SAMPLE_FREQUENCY_REG_STATUS_MASK	(0x80)
#define PCM9211_OUTPUT_SAMPLE_FREQUENCY_REG_PORT_MASK	(0x70)
#define PCM9211_OUTPUT_SAMPLE_FREQUENCY_REG_SF_MASK		(0x0F)
#define PCM9211_OUTPUT_SAMPLE_FREQUENCY_REG_PORT_DIR			(0x00)
#define PCM9211_OUTPUT_SAMPLE_FREQUENCY_REG_PORT_AUXIN2		(0x40)

#define PCM9211_INPUT_SAMPLE_FREQUENCY_REG		(0x39)
#define PCM9211_INPUT_SAMPLE_FREQUENCY_REG_STATUS_MASK	(0x80)
#define PCM9211_INPUT_SAMPLE_FREQUENCY_REG_SF_MASK		(0x0F)

#define PCM9211_INPUT_CALCULATED		(0x00)
#define PCM9211_INPUT_CALCULATING		(0x80)

#define PCM9211_OUTPUT_CALCULATED		(0x00)
#define PCM9211_OUTPUT_CALCULATING		(0x80)

typedef enum {
    PCM9211_NULL,  
    PCM9211_POWER_DOWN,
    PCM9211_POWER_UP,
	PCM9211_POWER_UP_COMPLTE,
    PCM9211_CHANGE_PATH_TO_AUXIN0,
    PCM9211_CHANGE_PATH_TO_ADC,
	PCM9211_MUTE_WAITING,
	PCM9211_RUN,
}PCM92211_Status;

#define PCM9211_UNMUTE_TIMER	df10msTimer400ms

void PCM9211_10ms_timer(void);
void PCM9211_Process(void);
void PCM9211_PowerUp(void);
void PCM9211_PowerDown(void);
void PCM9211_Set_Status(PCM92211_Status op);
void PCM9211_Init(void);
void PCM9211_Set_Output(uint8_t Port);

void PCM9211_Set_Path_Init(void);
void PCM9211_Set_Path_BT(void);
void PCM9211_Set_Path_AUX(void);
#endif //AD85050_H


